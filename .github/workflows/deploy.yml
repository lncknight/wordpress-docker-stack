name: Build image

on:
  push:
    branches:
      - master

    tags:
      - '*'

env:
  IMAGE_NAME: 'whatever'
  FOO: 'bar'
  IMAGE_ID: lncknight/wordpress

jobs:

  wp:

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    env:
      PREFIX: wp
      FOLDER: docker_wp

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker buildx build . --file ${FOLDER}/Dockerfile --tag $IMAGE_NAME

      # - name: Log into registry
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image
        run: |

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=$(date +"%Y%m%d")

          VERSION=${PREFIX}-$VERSION
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

  nginx:

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    env:
      PREFIX: nginx
      FODLER: docker_nginx

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker buildx build . --file ${FOLDER}/Dockerfile --tag $IMAGE_NAME

      # - name: Log into registry
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image
        run: |

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=$(date +"%Y%m%d")

          VERSION=${PREFIX}-$VERSION
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
  mysql:

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    env:
      PREFIX: mysql
      FODLER: docker_mysql

    steps:
      - uses: actions/checkout@v2

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1

      - name: Build image
        run: docker buildx build . --file ${FOLDER}/Dockerfile --tag $IMAGE_NAME

      # - name: Log into registry
      #   run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      
      -
        name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image
        run: |

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=$(date +"%Y%m%d")

          VERSION=${PREFIX}-$VERSION
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
