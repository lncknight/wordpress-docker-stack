include "./conf.d/upstreams/*.conf";

server {
  listen 80;
  server_name _;

  access_log /dev/stdout cf;

  # block prefix
  location ~ "^/(.git|.vscode|.env|docker-compose)" {
      return 403;
  }
  
  # block suffix
  location ~ ".*(.sh|.md)$" {
      return 403;
  }
  
  set $xscheme 'http';
  if ($http_cf_visitor = '{"scheme":"https"}'){
    set $xscheme 'https';  
  }
  
  set $isPlugin 'no';
  if ($request_uri ~ ^/wp-content/plugins){
    set $isPlugin 'yes';
  }
  
  set $isPhp 'no';
  if ($request_uri ~ /.+\.php$){
    set $isPhp 'yes';
  }
  
  set $hash "${isPlugin}-${isPhp}";
  add_header 'x-hash' $hash;
  
  if ($hash = 'yes-yes'){
    return 403;
  }

  location ~ ^/(wp-admin|manager) {
    add_header 'cache-control' 'private, max-age=0';
    
    proxy_pass http://api_upstream;
    
    proxy_set_header X-Forwarded-Proto $xscheme;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
  
  location / {
    proxy_pass http://api_upstream;
    
    proxy_set_header X-Forwarded-Proto $xscheme;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
