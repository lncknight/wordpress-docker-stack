include "./conf.d/upstreams/*.conf";

server {
  listen 80;
  server_name _;

  # real_ip_header http_cf_connecting_ip;
  real_ip_header X-Forwarded-For;
  set_real_ip_from 0.0.0.0/0;

  access_log /dev/stdout cf;

  # block prefix
  location ~ "^/(.git|.vscode|.env|docker-compose)" {
      return 403;
  }
  
  # block suffix
  location ~ ".*(.sh|.md)$" {
      return 403;
  }
  
  set $xscheme 'http';
  if ($http_cf_visitor = '{"scheme":"https"}'){
    set $xscheme 'https';  
  }

  # ------------------ pattern start --------------
  # Please in alphabetical order in name
  
  set $pattern "_hi";
  
  set $pattern "${pattern}-country:${http_cf_ipcountry}";
  
  if ($http_cf_ipcountry !~ HK|SG){
    set $pattern "${pattern}-country_else:yes";
  }
  
  # if ($request_uri ~ /.+\.php$){
  if ($request_uri ~ \.php$){
    set $pattern "${pattern}-php_file:yes";
  }
  
  if ($request_uri ~ ^/wp-content/plugins){
    set $pattern "${pattern}-plugin:yes";
  }
  
  if ($query_string ~ spu_action){
    set $pattern "${pattern}-query_spu:yes";
  }
  
  set $pattern "${pattern}-request_method:${request_method}";
  set $pattern "${pattern}-scheme:https";
  
  if ($request_uri ~ ^/wp-admin){
    set $pattern "${pattern}-wp_admin:yes";
  }
  # ------------------ pattern end --------------
  
  # debug
  # add_header 'x-debug-debuggggggg' "barrrrrrrrrr-${http_cf_connecting_ip}-${http_cf_ipcountry}-${remote_addr}-${http_x_forwarded_for}-${query_string}";
  
  # test pattern
  # set $debug_str "no";
  # if ($pattern ~  .*foo\:bar|.*) { 
  #  set $debug_str "yes";
  # }
  add_header 'x-debug-pattern' "${pattern}";

  #if ($pattern ~ submit_form:yes.*join_page:no.*){
  #  return 403;
  #}
  
  # not allow POST from country_else
  # if ($pattern ~ country_else:yes.*request_method:POST.*){
  #   return 403;
  # }
  
  
  #if ($pattern ~ wp_admin:yes){
  #  return 403;
  #}
  
  # not allow requesting php file under /plugins folder
  if ($pattern ~ php_file:yes.*plugin:yes){
    return 403;
  }
  
  # not allow POST with query spu_action
  if ($pattern ~ query_spu:yes.*request_method:POST.*){
    return 403;
  }

  location ~ ^/(wp-admin|manager) {
    add_header 'cache-control' 'private, max-age=0';
    
    proxy_pass http://api_upstream;
    
    proxy_set_header X-Forwarded-Proto $xscheme;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
  
  # modx security - https://docs.modx.com/current/en/getting-started/maintenance/securing-modx
  location ~ ^/(\.(?!well_known)|_build|_gitify|_backup|core|config.core.php) {
    rewrite ^/(\.(?!well_known)|_build|_gitify|_backup|core|config.core.php) /index.php?q=doesnotexist;    
  }

  location / {
    proxy_pass http://api_upstream;
    
    proxy_set_header X-Forwarded-Proto $xscheme;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
  }
}
