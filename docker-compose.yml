version: '3.4'

services:

  nginx:
    # build: ./docker_nginx
    image: lncknight/wordpress:nginx-1.20220406.1
    volumes:
      - ./docker_nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker_nginx/conf.d:/etc/nginx/conf.d/
      - ./docker_nginx/start.sh:/root/start.sh
      - ./docker_nginx/test.sh:/root/test.sh
      - ./docker_nginx/watcher.sh:/root/watcher.sh
      - ./docker_nginx/supervisor.d/:/etc/supervisor.d/
    restart: always
    ports:
      - "${WP_EXPOSE_PORT}:80"
    env_file: 
      - .env
    logging:
      options:
        max-size: 500m
          
  wp:
    # image: wordpress:php7.4-apache
    # build: ./docker_wp/
    image: lncknight/wordpress:wp-1.20220406.1
    # ports:
    #   - "${WP_EXPOSE_PORT:-80}:80" # change ip if required
    volumes:
      - "${WP_DATA_DIR:-./wp/data}:/var/www/html" # Full wordpress project
      - ./docker_wp/scripts:/root/scripts
      - ./docker_wp/scripts/supervisor/conf.d:/etc/supervisor/conf.d
    # depends_on:
      # - db
    # links:
    #   - db
    env_file: 
      - .env
    command: sh /root/scripts/start.sh
    logging:
      options:
        max-size: 500m
    healthcheck:
      test: ["CMD", "curl", "-f", "-X", "GET", "-I", "http://localhost/?health_check=1"]
      interval: 0m10s
      timeout: 10s
      retries: 3
      start_period: 5s
    
  # wpcli:
  #  image: wordpress:cli
  #  volumes:
  #   #  - ./config/php.conf.ini:/usr/local/etc/php/conf.d/conf.ini
  #    - .:/var/www/html
  #  depends_on:
  #    # - db
  #    - wp
  
  mysql:
    # build: ./docker_mysql/
    image: lncknight/wordpress:mysql-1.20220406.1
    # command: --default-authentication-plugin=mysql_native_password
    restart: always
    ports:
      - "${DB_EXPOSE_PORT:-3306}:3306"
    volumes:
      - ./mysql_data/data:/var/lib/mysql
      - ./docker_mysql/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      # - ./docker_mysql/.aws/credentials:/root/.aws/credentials
      - ./docker_mysql/scripts:/root/scripts
      - ./docker_mysql/scripts/supervisor/conf.d:/etc/supervisor/conf.d
      # - ./docker_mysql/scripts/schedule:/etc/cron.d/backup_schedule
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_PASSWD}"
    command: sh /root/scripts/start.sh
    env_file: 
      - .env
    logging:
      options:
        max-size: 500m 
      
    
    
    
    
    
    